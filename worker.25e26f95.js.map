{"version":3,"sources":["../../src/main/worker.ts"],"names":["dedicatedWorkerGlobalScope","isDedicatedWorkerGlobalScope","self","onMessageFromMaster","event","computeScheduleArgs","data","result","computeSchedule","postMessage","close","onmessage"],"mappings":";;;;;;;;;AAiBEA,aAAAA,IAAAA,EAAAA,QAAAA,yBAAAA,EAAAA,QAAAA,mBAVF,IAAIC,EAA6BC,EAAAA,8BAAAA,MAAO,CAChCF,MAAAA,EAAyDE,KAEtDC,SAAAA,EAAoBC,GACrBC,MAAAA,EAAiDD,EAAME,KACvDC,GAAoCC,EAAgB,EAAA,oBAAGH,GAC7DL,EAA2BS,YAAYF,GACvCP,EAA2BU,QAG7BV,EAA2BW,UAAYR","file":"worker.25e26f95.js","sourceRoot":"../../src/html","sourcesContent":["import { computeSchedule } from './scheduling';\nimport {\n  ComputeScheduleParameters,\n  ComputeScheduleReturnType,\n  isDedicatedWorkerGlobalScope,\n} from './worker-interface';\n\nif (isDedicatedWorkerGlobalScope(self)) {\n  const dedicatedWorkerGlobalScope: DedicatedWorkerGlobalScope = self;\n\n  function onMessageFromMaster(event: MessageEvent): void {\n    const computeScheduleArgs: ComputeScheduleParameters = event.data;\n    const result: ComputeScheduleReturnType = computeSchedule(...computeScheduleArgs);\n    dedicatedWorkerGlobalScope.postMessage(result);\n    dedicatedWorkerGlobalScope.close();\n  }\n\n  dedicatedWorkerGlobalScope.onmessage = onMessageFromMaster;\n}\n"]}